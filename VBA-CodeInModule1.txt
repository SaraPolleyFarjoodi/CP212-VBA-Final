Option Explicit

'for customButton1 onAction
Sub CallUFStudentGrades(control As IRibbonControl)
    'clear all contents before running the program again
    'this button is used to clear both worksheets that have data
    Sheets("Student Grades").Range("A1:M54").ColumnWidth = 8.11
    Sheets("Student Grades").Cells.Clear
    
    Sheets("Student Details").Range("A1:M54").ColumnWidth = 8.11
    Sheets("Student Details").Cells.Clear
    
    'skip over error because if there's no chart to delete then no action needs to be taken during this step
    On Error Resume Next
    Sheets("Student Grades").ChartObjects(1).Delete
    On Error GoTo 0
    
    
    'insert code to call the userform for the user to pick the file registrar.mdb
    UserForm2.Show
End Sub

'for customButton2 onAction
Sub graphData(control As IRibbonControl)
    'insert code to put data into histogram graph
    Call Chart1
    
    Worksheets("Student Grades").Cells(1, 3).Select
End Sub

'for customButton3 onAction
Sub blankSlate(control As IRibbonControl)
    'this button is used to clear both worksheets that have data
    Sheets("Student Grades").Range("A1:M54").ColumnWidth = 8.11
    Sheets("Student Grades").Cells.Clear
    
    Sheets("Student Details").Range("A1:M54").ColumnWidth = 8.11
    Sheets("Student Details").Cells.Clear
    
    'skip over error because if there's no chart to delete then no action needs to be taken during this step
    On Error Resume Next
    Sheets("Student Grades").ChartObjects(1).Delete
    On Error GoTo 0
End Sub


Sub Chart1()
    'delete old chart
    Dim chtChart As Chart
    Dim rRng As Range
    
    Set rRng = Sheets("Student Grades").Range("B2") 'set range to a cell where there should be data.
    
    
    'error handling: if there isn't any data in the cell than the histogram cannot run
    If (IsEmpty(rRng.Value) = False) Then
        
        'skip over error because if there's no chart to delete then no action needs to be taken during this step
        On Error Resume Next
        Sheets("Student Grades").ChartObjects(1).Delete
        On Error GoTo 0
        
    
        'Create a new chart
        Set chtChart = Charts.Add
        Set chtChart = chtChart.Location(Where:=xlLocationAsObject, Name:="Student Grades")
        With chtChart
           .ChartType = xlColumnStacked 'xlLine
           'Link to the source data range.
           .SetSourceData Source:=Sheets("Student Grades").Range("a2:b51"), PlotBy:=xlColumns
           .HasTitle = True
           .ChartTitle.Text = Range("B1").Value & " For Student in " & Range("H2").Value
           .Axes(xlCategory, xlPrimary).HasTitle = True
           .Axes(xlCategory, xlPrimary).AxisTitle.Characters.Text = "Student ID"
           .Axes(xlValue, xlPrimary).HasTitle = True
           .Axes(xlValue, xlPrimary).AxisTitle.Characters.Text = Range("B1").Value
        End With
        
        'change size of chart
        ActiveChart.Parent.Height = 200 ' resize
        ActiveChart.Parent.Width = 500  ' resize
        
        'call the subroutine that will export the data to a word document
        Call ExportToWord
        
    Else
        'post error message for user
        MsgBox "You must first run the Student Grades icon in order for there to be data to display in the graph.", vbOKOnly + vbCritical
    End If

End Sub

Sub ExportToWord()
    'declare word object variables
    Dim WA As Word.Application
    Dim WD As Word.Document
    
    'declare excel object variables
    Dim Chrt As ChartObject
    
    'variable holds the location of where the word doc is saved to
    Dim fileLocation As String
    
    
    Set WA = New Word.Application
    WA.Visible = True
    WA.Activate 'make the word doc the main window
    
    'create a new word doc
    Set WD = WA.Documents.Add
    
    'create a reference to the chart I want to export
    Set Chrt = Sheets("Student Grades").ChartObjects(1)
    'copy chart
    Chrt.Chart.ChartArea.Copy

    
    'paste into word document
    With WA.Selection
        .BoldRun
        .Paragraphs.Alignment = wdAlignParagraphCenter
        .Font.Size = 14
        .TypeText "Student Results Calculated in Excel" & vbNewLine
        
        .Paragraphs.Alignment = wdAlignParagraphLeft
        .BoldRun
        .TypeParagraph
        .Font.Size = 11
        'print to the word docuemnt what the program does and what the data printed to the word document means
        .TypeText "The following information was calculated in Excel. The " & Range("B1").Value & _
        " for all students in the " & Range("H2").Value & _
        " class are displayed in the bar chart below. The data was collected from a Microsoft Access database and" & _
        " the min, max, average, and standard deviation values were calculated and are as seen below. To find the" & _
        " name of the students enrolled in this class, refer to the chart on the page below this one. There you will find" & _
        " each student's first and last name beside their student ID." & vbNewLine & vbNewLine
        
        'print to the word document the min, max, average, and standard deviation
        .Paragraphs.Alignment = wdAlignParagraphCenter
        .TypeText Range("D2").Value & " " & Range("E2").Value & "%" & vbNewLine
        .TypeText Range("D3").Value & " " & Range("E3").Value & "%" & vbNewLine
        .TypeText Range("D4").Value & " " & Range("E4").Value & "%" & vbNewLine
        .TypeText Range("D5").Value & " " & Range("E5").Value & "%" & vbNewLine & vbNewLine
        
    End With
    
    
    'setup word document margins
    With WA.ActiveDocument.PageSetup
    .TopMargin = WA.InchesToPoints(0.6)
    .BottomMargin = WA.InchesToPoints(0.6)
    .LeftMargin = WA.InchesToPoints(0.6)
    .RightMargin = WA.InchesToPoints(0.6)
    End With
    
    
    'paste bar chart into word document
    WA.Selection.PasteSpecial Link:=True, DataType:=wdPasteOLEObject
    
    'add a new page
    WA.ActiveDocument.Sections.Add
    'go to newly created page
    WA.Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext
    'clear clipboard
    Application.CutCopyMode = False
    
    
    
    'add table with student details to word document
    Worksheets("Student Details").Range("A1:C51").Copy 'first copy the table you want
    
    'paste table to word doc
    WA.Selection.PasteSpecial Link:=True, DataType:=wdPasteOLEObject
    
    'add a new page
    WA.ActiveDocument.Sections.Add
    'go to newly created page
    WA.Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext
    'clear clipboard
    Application.CutCopyMode = False
    
    
    'save word document to your working folder
    'create a unique naming convention for each word document so no documents have the same name
    fileLocation = ActiveWorkbook.path & "\Student Marking Application Report" & Format(Now, "yyyy-mm-dd hh-mm-ss") & ".docx"
    WA.ActiveDocument.SaveAs2 fileLocation
    
    MsgBox "Word Document was saved to: " & fileLocation 'let user know where document was saved to
    
End Sub
